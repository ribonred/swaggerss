openapi: "3.0.0"
info:
  version: "v1"
  title: "Glints Bla bla bla"
  description: "Api for user"
servers:
  - url: "http://pretest-qa.dcidev.id"
# components:
#   securitySchemes:
#     # See https://demo.identityserver.io/ for configuration details.
#     identity_server_auth:
#       type: oauth2
#       flows:
#         implicit:
#           authorizationUrl: "https://demo.identityserver.io/connect/authorize"
#           scopes:
#             api: "api"
# security:
#   - identity_server_auth:
#     - api
host: "http://pretest-qa.dcidev.id"
tags:
- name: "Message"
  description: "Everything about your Messages"
paths:
  /api/v1/message/{user_id}:
    get:
      tags: 
      - "Message"
      summary: "Get message user by user ID"
      produces:
        - "application/json"
      parameters:
      - name: "petId"
        in: "path"
        description: "ID of pet to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        401:
          description: "Unauthorized"
        200:
          description: "OK"
          schema: 
            $ref: "#/definitions/ApiResponse"


# {'name':'eko','pekerjaan':{'bagian':'IT'}}

# name: 'eko'
# pekerjaan:
#   bagian: 'IT'

# {
#   "error": {
#     "code": 401,
#     "errors": [
#       "Invalid token"
#     ]
#   }
# }
definitions:
  ApiResponse:
    type: "object"
    properties:
      error:
        type: "object"
        code: 401
          type: "integer"
          format: "int64"
        errors:
          type: "array"
